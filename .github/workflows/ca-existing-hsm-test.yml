name: CA with existing HSM
# docs/installation/ca/installing-ca-with-existing-keys-in-hsm.adoc

on: workflow_call

env:
  DS_IMAGE: ${{ vars.DS_IMAGE || 'quay.io/389ds/dirsrv' }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Retrieve PKI images
        uses: actions/cache@v4
        with:
          key: pki-images-${{ github.sha }}
          path: pki-images.tar

      - name: Load PKI images
        run: docker load --input pki-images.tar

      - name: Create network
        run: docker network create example

      - name: Set up DS container
        run: |
          tests/bin/ds-create.sh \
              --image=${{ env.DS_IMAGE }} \
              --hostname=ds.example.com \
              --network=example \
              --network-alias=ds.example.com \
              --password=Secret.123 \
              ds

      - name: Set up PKI container
        run: |
          tests/bin/runner-init.sh \
              --hostname=pki.example.com \
              --network=example \
              --network-alias=pki.example.com \
              pki

      - name: Install dependencies
        run: |
          docker exec pki dnf install -y softhsm

      - name: Create SoftHSM token
        run: |
          # allow PKI user to access SoftHSM files
          docker exec pki usermod pkiuser -a -G ods

          # create SoftHSM token for PKI server
          docker exec pki runuser -u pkiuser -- \
              softhsm2-util \
              --init-token \
              --label HSM \
              --so-pin Secret.HSM \
              --pin Secret.HSM \
              --free

      - name: Create PKI server
        run: |
          docker exec pki pki-server create
          docker exec pki pki-server nss-create --no-password

          docker exec pki pki-server password-set "hardware-HSM" --password "Secret.HSM"
          docker exec pki cat /var/lib/pki/pki-tomcat/conf/password.conf

      - name: Create CA signing cert
        run: |
          # create cert request
          docker exec pki pki-server cert-request \
              --token HSM \
              --subject "CN=CA Signing Certificate" \
              --ext /usr/share/pki/server/certs/ca_signing.conf \
              ca_signing

          # issue cert
          docker exec pki pki-server cert-create \
              --token HSM \
              --ext /usr/share/pki/server/certs/ca_signing.conf \
              ca_signing

          # import cert
          docker exec pki pki-server cert-import \
              --token HSM \
              ca_signing

          # check original cert
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-show \
              HSM:ca_signing | tee ca_signing.crt.before

          # check original key
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-key-find \
              --nickname HSM:ca_signing | tee ca_signing.key.before

      - name: Create CA OCSP signing cert
        run: |
          # create cert request
          docker exec pki pki-server cert-request \
              --token HSM \
              --subject "CN=OCSP Signing Certificate" \
              --ext /usr/share/pki/server/certs/ocsp_signing.conf \
              ca_ocsp_signing

          # issue cert
          docker exec pki pki-server cert-create \
              --token HSM \
              --issuer HSM:ca_signing \
              --ext /usr/share/pki/server/certs/ocsp_signing.conf \
              ca_ocsp_signing

          # import cert
          docker exec pki pki-server cert-import \
              --token HSM \
              ca_ocsp_signing

          # check original cert
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-show \
              HSM:ca_ocsp_signing | tee ca_ocsp_signing.crt.before

          # check original key
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-key-find \
              --nickname HSM:ca_ocsp_signing | tee ca_ocsp_signing.key.before

          # check original cert
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-show \
              HSM:ca_audit_signing | tee ca_audit_signing.crt.before

          # check original key
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-key-find \
              --nickname HSM:ca_audit_signing | tee ca_audit_signing.key.before

      - name: Create subsystem cert
        run: |
          # create cert request
          docker exec pki pki-server cert-request \
              --token HSM \
              --subject "CN=Subsystem Certificate" \
              --ext /usr/share/pki/server/certs/subsystem.conf \
              subsystem

          # issue cert
          docker exec pki pki-server cert-create \
              --token HSM \
              --issuer HSM:ca_signing \
              --ext /usr/share/pki/server/certs/subsystem.conf \
              subsystem

          # import cert
          docker exec pki pki-server cert-import \
              --token HSM \
              subsystem

          # check original cert
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-show \
              HSM:subsystem | tee subsystem.crt.before

          # check original key
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-key-find \
              --nickname HSM:subsystem | tee subsystem.key.before

      - name: Create SSL server cert
        run: |
          # create cert request
          docker exec pki pki-server cert-request \
              --subject "CN=pki.example.com" \
              --ext /usr/share/pki/server/certs/sslserver.conf \
              sslserver

          # issue cert
          docker exec pki pki-server cert-create \
              --token HSM \
              --issuer HSM:ca_signing \
              --ext /usr/share/pki/server/certs/sslserver.conf \
              sslserver

          # import cert
          docker exec pki pki-server cert-import sslserver

          # check original cert
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              nss-cert-show \
              sslserver | tee sslserver.crt.before

          # check original key
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              nss-key-find \
              --nickname sslserver | tee sslserver.key.before

      - name: Create admin cert
        run: |
          # create cert request
          docker exec pki pki \
              nss-cert-request \
              --subject "CN=Administrator" \
              --ext /usr/share/pki/server/certs/admin.conf \
              --csr /tmp/admin.csr

          # issue cert
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-issue \
              --issuer HSM:ca_signing \
              --csr /tmp/admin.csr \
              --ext /usr/share/pki/server/certs/admin.conf \
              --cert /tmp/admin.crt

          # import cert
          docker exec pki pki nss-cert-import \
              --cert /tmp/admin.crt \
              caadmin

          docker exec pki pki \
              nss-cert-show \
              caadmin

      - name: Check SoftHSM files
        run: |
          docker exec pki ls -lR /var/lib/softhsm/tokens

      - name: Install CA with existing HSM
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/ca.cfg \
              -s CA \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -D pki_hsm_enable=True \
              -D pki_token_name=HSM \
              -D pki_token_password=Secret.HSM \
              -D pki_ca_signing_token=HSM \
              -D pki_ocsp_signing_token=HSM \
              -D pki_audit_signing_nickname= \
              -D pki_subsystem_token=HSM \
              -D pki_sslserver_token=internal \
              -D pki_admin_cert_path=/tmp/admin.crt \
              -D pki_admin_csr_path=/tmp/admin.csr \
              -v

      - name: Run PKI healthcheck
        run: docker exec pki pki-healthcheck --failures-only

      - name: Check CA signing cert
        run: |
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-show \
              HSM:ca_signing | tee ca_signing.crt.after

          # cert should not change
          diff ca_signing.crt.before ca_signing.crt.after

          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-key-find \
              --nickname HSM:ca_signing | tee ca_signing.key.after

          # key should not change
          diff ca_signing.key.before ca_signing.key.after

      - name: Check CA OCSP signing cert
        run: |
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-show \
              HSM:ca_ocsp_signing | tee ca_ocsp_signing.crt.after

          # cert should not change
          diff ca_ocsp_signing.crt.before ca_ocsp_signing.crt.after

          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-key-find \
              --nickname HSM:ca_ocsp_signing | tee ca_ocsp_signing.key.after

          # key should not change
          diff ca_ocsp_signing.key.before ca_ocsp_signing.key.after

          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-key-find \
              --nickname HSM:ca_audit_signing | tee ca_audit_signing.key.after

          # key should not change
          diff ca_audit_signing.key.before ca_audit_signing.key.after

      - name: Check subsystem cert
        run: |
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-show \
              HSM:subsystem | tee subsystem.cert.actual

          # cert should not change
          diff subsystem.crt.before subsystem.cert.actual

          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-key-find \
              --nickname HSM:subsystem | tee subsystem.key.after

          # key should not change
          diff subsystem.key.before subsystem.key.after

      - name: Check SSL server cert
        run: |
          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              nss-cert-show \
              sslserver | tee sslserver.crt.after

          # cert should not change
          diff sslserver.crt.before sslserver.crt.after

          docker exec pki runuser -u pkiuser -- \
              pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              nss-key-find \
              --nickname sslserver | tee sslserver.key.after

          # key should not change
          diff sslserver.key.before sslserver.key.after

      - name: Check CA admin cert
        run: |
          docker exec pki pki nss-cert-import \
              --cert /var/lib/pki/pki-tomcat/conf/certs/ca_signing.crt \
              --trust CT,C,C \
              ca_signing

          docker exec pki pki -n caadmin ca-user-show caadmin

      - name: Check CA certs and requests
        run: |
          docker exec pki pki ca-cert-find
          docker exec pki pki -n caadmin ca-cert-request-find

      - name: Remove CA
        run: docker exec pki pkidestroy -s CA -v

      - name: Remove SoftHSM token
        run: |
          docker exec pki runuser -u pkiuser -- softhsm2-util --delete-token --token HSM

      - name: Check DS server systemd journal
        if: always()
        run: |
          docker exec ds journalctl -x --no-pager -u dirsrv@localhost.service

      - name: Check DS container logs
        if: always()
        run: |
          docker logs ds

      - name: Check PKI server systemd journal
        if: always()
        run: |
          docker exec pki journalctl -x --no-pager -u pki-tomcatd@pki-tomcat.service

      - name: Check PKI server access log
        if: always()
        run: |
          docker exec pki find /var/log/pki/pki-tomcat -name "localhost_access_log.*" -exec cat {} \;

      - name: Check CA debug log
        if: always()
        run: |
          docker exec pki find /var/lib/pki/pki-tomcat/logs/ca -name "debug.*" -exec cat {} \;
