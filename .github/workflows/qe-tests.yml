name: QE Tests

on: [push, pull_request]

jobs:
  # docs/development/Building_PKI.md
  build:
    name: Building PKI
    runs-on: ubuntu-latest
    container: fedora:${{ matrix.os }}
    strategy:
      matrix:
        os: ['32']
    steps:
      - name: Install git
        run: dnf install -y git

      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Install PKI build deps
        run: |
          dnf install -y dnf-plugins-core rpm-build
          dnf copr enable -y @pki/master
          dnf builddep -y --allowerasing --spec ./pki.spec --nogpgcheck

      - name: Build PKI packages
        run: ./build.sh --with-timestamp --with-commit-id --work-dir=build rpm

      - name: Upload RPM artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pki-build-${{ matrix.os }}
          path: build/RPMS/

  # Tier 0
  installation-sanity:
    # This job uses Ansible playbooks in the tests/ dir to setup a PKI deployment.
    # All 5 subsystems are deployed on "discrete" instances
    name: installation-sanity
    needs: build
    runs-on: macos-latest
    env:
      BUILDDIR: /tmp/workdir
      PKIDIR: /tmp/workdir/pki
      LOGS: ${GITHUB_WORKSPACE}/logs.txt
      COPR_REPO: "@pki/master"
      HOSTFILE: /tmp/hostfile
      CONTROLLER_IP: "192.168.33.10"
      MASTER_IP: "192.168.33.20"
      TOPOLOGY: "topology-02"
    strategy:
      matrix:
        os: ['32']  # NOTE: In F31, NFS client installation fails!
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Download PKI packages
        uses: actions/download-artifact@v2
        with:
          name: pki-build-${{ matrix.os }}
          path: build/RPMS

      - name: Modify the vagrant file per requirement
        run: |
          cd ci
          sed -e "s/MASTER_IP/${MASTER_IP}/g" \
              -e "s/CONTROLLER_IP/${CONTROLLER_IP}/g" \
              -e "s~COPR_REPO~${COPR_REPO}~g" \
              -e "s/RELEASE/${{ matrix.os }}/g" \
              Vagrantfile > ../Vagrantfile

          sed -e "s/MASTER_IP/${MASTER_IP}/g" \
              -e "s/TOPOLOGY/${TOPOLOGY}/g" \
              inventory > ../inventory
          cd ../

      # Don't provision the VMs as they might not be ready for inter communication
      - name: Boot the "controller" VM without provisioning
        run: vagrant up controller --no-provision

      - name: Boot the "master" without provisioning
        run: vagrant up master --no-provision

      - name: Install the built PKI packages on "master"
        run: vagrant provision master

      - name: Set up PKI deployment by running playbook on "controller"
        run: vagrant provision controller

      - name: Run CA related tests
        run: |
          vagrant ssh controller -c \
          'pytest --ansible-host-pattern master \
          --ansible-inventory /vagrant/inventory \
          --ansible-module-path /vagrant/tests/dogtag/pytest-ansible/common-modules/ \
          /vagrant/tests/dogtag/pytest-ansible/pytest/sanity/test_role_users.py \
          --junit-xml pki_cert_junit.xml -qsvvv'

      - name: Setup tmate session
        if: failure()
        uses: mxschmitt/action-tmate@v2
