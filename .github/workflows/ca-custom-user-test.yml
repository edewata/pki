name: CA with custom user

on: workflow_call

env:
  DB_IMAGE: ${{ vars.DB_IMAGE || 'quay.io/389ds/dirsrv' }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Retrieve PKI images
        uses: actions/cache@v4
        with:
          key: pki-images-${{ github.sha }}
          path: pki-images.tar

      - name: Load PKI images
        run: docker load --input pki-images.tar

      - name: Create network
        run: docker network create example

      - name: Set up DS container
        run: |
          tests/bin/ds-create.sh \
              --image=${{ env.DB_IMAGE }} \
              --hostname=ds.example.com \
              --password=Secret.123 \
              ds

      - name: Connect DS container to network
        run: docker network connect example ds --alias ds.example.com

      - name: Set up PKI container
        run: |
          tests/bin/runner-init.sh pki
        env:
          HOSTNAME: pki.example.com

      - name: Connect PKI container to network
        run: docker network connect example pki --alias pki.example.com

      - name: Create custom user and group
        run: |
          docker exec pki groupadd pki
          docker exec pki getent group pki

          docker exec pki useradd -g pki pki
          docker exec pki getent passwd pki

      - name: Install CA with custom user and group
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/ca.cfg \
              -s CA \
              -D pki_user=pki \
              -D pki_group=pki \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -v

      - name: Check PKI server process
        run: |
          # get process UID
          docker exec pki ps -ef | grep catalina.base | tee output
          cut -d' ' -f1 output > actual

          echo pki > expected
          diff expected actual

      - name: Run PKI healthcheck
        run: docker exec pki pki-healthcheck --failures-only

      - name: Initialize PKI client
        run: |
          docker exec pki pki-server cert-export ca_signing --cert-file ca_signing.crt

          docker exec pki pki nss-cert-import \
              --cert ca_signing.crt \
              --trust CT,C,C \
              ca_signing

          docker exec pki pki info

      - name: Check CA admin
        run: |
          docker exec pki pki pkcs12-import \
              --pkcs12 /root/.dogtag/pki-tomcat/ca_admin_cert.p12 \
              --pkcs12-password Secret.123
          docker exec pki pki -n caadmin ca-user-show caadmin

      - name: Create self-signed user cert
        run: |
          # generate user CSR
          docker exec pki pki nss-cert-request \
              --subject "UID=testuser" \
              --ext /usr/share/pki/server/certs/admin.conf \
              --csr testuser.csr

          # issue user cert
          docker exec pki pki nss-cert-issue \
              --csr testuser.csr \
              --ext /usr/share/pki/server/certs/admin.conf \
              --cert testuser.crt

          # import user cert
          docker exec pki pki nss-cert-import \
              --cert testuser.crt \
              testuser

      - name: Authentication with self-signed user cert should not work
        run: |
          docker exec pki pki \
              -n testuser \
              ca-user-find \
              > >(tee stdout) 2> >(tee stderr >&2) || true

          cat > expected << EOF
          SEVERE: FATAL: SSL alert received: UNKNOWN_CA
          IOException: Unable to read from socket: Error reading from socket: (-12195) Peer does not recognize and trust the CA that issued your certificate.
          EOF

          diff expected stderr

          docker exec pki pki \
              -D org.dogtagpki.client.socketFactory=org.dogtagpki.client.NonBlockingSocketFactory \
              -n testuser \
              ca-user-find \
              > >(tee stdout) 2> >(tee stderr >&2) || true

          cat > expected << EOF
          SEVERE: FATAL: SSL alert received: UNKNOWN_CA
          SEVERE: FATAL: SSL alert sent: UNEXPECTED_MESSAGE
          RuntimeException: Unexpected error trying to construct channel: Unable to perform operations on a closed socket!
          EOF

          diff expected stderr

      - name: Remove CA
        run: docker exec pki pkidestroy -i pki-tomcat -s CA -v

      - name: Check DS server systemd journal
        if: always()
        run: |
          docker exec ds journalctl -x --no-pager -u dirsrv@localhost.service

      - name: Check DS container logs
        if: always()
        run: |
          docker logs ds

      - name: Check PKI server systemd journal
        if: always()
        run: |
          docker exec pki journalctl -x --no-pager -u pki-tomcatd@pki-tomcat.service

      - name: Check CA debug log
        if: always()
        run: |
          docker exec pki find /var/lib/pki/pki-tomcat/logs/ca -name "debug.*" -exec cat {} \;

      - name: Gather artifacts
        if: always()
        run: |
          tests/bin/ds-artifacts-save.sh ds
          tests/bin/pki-artifacts-save.sh pki
        continue-on-error: true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ca-custom-user-test
          path: /tmp/artifacts
