name: IPA Tests

on: [push, pull_request]

jobs:
  # docs/development/Building_PKI.md
  build:
    name: Building PKI
    runs-on: ubuntu-latest
    env:
      COPR_REPO: "@pki/master"
    strategy:
      matrix:
        os: ['33']
    steps:
      - name: Clone the repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build runner image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            OS_VERSION=${{ matrix.os }}
            COPR_REPO=${{ env.COPR_REPO }}
            BUILD_OPTS=--with-pkgs=base,server,acme,ca,kra --with-timestamp --with-commit-id
          tags: pki-runner
          target: pki-runner
          outputs: type=docker,dest=/tmp/pki-runner.tar

      - name: Upload runner image
        uses: actions/upload-artifact@v2
        with:
          name: pki-runner-${{ matrix.os }}
          path: /tmp/pki-runner.tar

  ipa-24-bit-test:
    name: Testing IPA with 24-bit ID generators
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILDDIR: /tmp/workdir
      PKIDIR: /tmp/workdir/pki
      COPR_REPO: "@pki/master"
    strategy:
      matrix:
        os: ['33']
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Download runner image
        uses: actions/download-artifact@v2
        with:
          name: pki-runner-${{ matrix.os }}
          path: /tmp

      - name: Load runner image
        run: docker load --input /tmp/pki-runner.tar

      - name: Create network
        run: docker network create example

      - name: Run IPA container
        run: |
          IMAGE=pki-runner \
          NAME=ipa \
          HOSTNAME=ipa.example.com \
          ci/runner-init.sh

      - name: Connect IPA container to network
        run: docker network connect example ipa --alias ipa.example.com --alias ipa-ca.example.com

      - name: Install IPA packages in IPA container
        run: |
          docker exec ipa dnf copr enable -y @freeipa/freeipa-master-nightly
          docker exec ipa dnf install -y freeipa-server freeipa-server-dns freeipa-server-trust-ad \
              python3-ipatests freeipa-healthcheck

      - name: Use 24-bit cert serial number
        run: |
          docker exec ipa bash -c "echo dbs.certs.id.length=3 >> /usr/share/pki/ca/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.requests.id.length=3 >> /usr/share/pki/ca/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.keys.id.length=3 >> /usr/share/pki/kra/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.requests.id.length=3 >> /usr/share/pki/kra/conf/CS.cfg"

      - name: Install IPA server in IPA container
        run: |
          docker exec ipa sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec ipa ipa-server-install \
              -U \
              --domain example.com \
              -r EXAMPLE.COM \
              -p Secret.123 \
              -a Secret.123 \
              --setup-kra \
              --no-host-dns \
              --no-ntp
          docker exec ipa bash -c "echo Secret.123 | kinit admin"
          docker exec ipa ipa ping

      - name: Verify CA admin in IPA container
        run: |
          docker exec ipa pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec ipa pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec ipa pki client-cert-import \
              --pkcs12 /root/ca-agent.p12 \
              --pkcs12-password Secret.123
          docker exec ipa pki -n ipa-ca-agent ca-user-show admin

      - name: Run IPA tests in IPA container
        run: docker exec ipa ${PKIDIR}/ci/ipa-test.sh

      - name: Gather artifacts from IPA container
        if: always()
        run: |
          ci/ds-artifacts-save.sh ipa EXAMPLE-COM
          ci/pki-artifacts-save.sh ipa
          ci/ipa-artifacts-save.sh ipa

      - name: Remove IPA server from IPA container
        run: docker exec ipa ipa-server-install --uninstall -U

      - name: Upload artifacts from IPA container
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ipa-24-bit-${{ matrix.os }}
          path: |
            /tmp/artifacts/ipa

  ipa-32-bit-test:
    name: Testing IPA with 32-bit ID generators
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILDDIR: /tmp/workdir
      PKIDIR: /tmp/workdir/pki
      COPR_REPO: "@pki/master"
    strategy:
      matrix:
        os: ['33']
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Download runner image
        uses: actions/download-artifact@v2
        with:
          name: pki-runner-${{ matrix.os }}
          path: /tmp

      - name: Load runner image
        run: docker load --input /tmp/pki-runner.tar

      - name: Create network
        run: docker network create example

      - name: Run IPA container
        run: |
          IMAGE=pki-runner \
          NAME=ipa \
          HOSTNAME=ipa.example.com \
          ci/runner-init.sh

      - name: Connect IPA container to network
        run: docker network connect example ipa --alias ipa.example.com --alias ipa-ca.example.com

      - name: Install IPA packages in IPA container
        run: |
          docker exec ipa dnf copr enable -y @freeipa/freeipa-master-nightly
          docker exec ipa dnf install -y freeipa-server freeipa-server-dns freeipa-server-trust-ad \
              python3-ipatests freeipa-healthcheck

      - name: Use 32-bit cert serial number
        run: |
          docker exec ipa bash -c "echo dbs.certs.id.length=4 >> /usr/share/pki/ca/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.requests.id.length=4 >> /usr/share/pki/ca/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.keys.id.length=4 >> /usr/share/pki/kra/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.requests.id.length=4 >> /usr/share/pki/kra/conf/CS.cfg"

      - name: Install IPA server in IPA container
        run: |
          docker exec ipa sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec ipa ipa-server-install \
              -U \
              --domain example.com \
              -r EXAMPLE.COM \
              -p Secret.123 \
              -a Secret.123 \
              --setup-kra \
              --no-host-dns \
              --no-ntp
          docker exec ipa bash -c "echo Secret.123 | kinit admin"
          docker exec ipa ipa ping

      - name: Verify CA admin in IPA container
        run: |
          docker exec ipa pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec ipa pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec ipa pki client-cert-import \
              --pkcs12 /root/ca-agent.p12 \
              --pkcs12-password Secret.123
          docker exec ipa pki -n ipa-ca-agent ca-user-show admin

      - name: Run IPA tests in IPA container
        run: docker exec ipa ${PKIDIR}/ci/ipa-test.sh

      - name: Gather artifacts from IPA container
        if: always()
        run: |
          ci/ds-artifacts-save.sh ipa EXAMPLE-COM
          ci/pki-artifacts-save.sh ipa
          ci/ipa-artifacts-save.sh ipa

      - name: Remove IPA server from IPA container
        run: docker exec ipa ipa-server-install --uninstall -U

      - name: Upload artifacts from IPA container
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ipa-32-bit-${{ matrix.os }}
          path: |
            /tmp/artifacts/ipa

  ipa-40-bit-test:
    name: Testing IPA with 40-bit ID generators
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILDDIR: /tmp/workdir
      PKIDIR: /tmp/workdir/pki
      COPR_REPO: "@pki/master"
    strategy:
      matrix:
        os: ['33']
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Download runner image
        uses: actions/download-artifact@v2
        with:
          name: pki-runner-${{ matrix.os }}
          path: /tmp

      - name: Load runner image
        run: docker load --input /tmp/pki-runner.tar

      - name: Create network
        run: docker network create example

      - name: Run IPA container
        run: |
          IMAGE=pki-runner \
          NAME=ipa \
          HOSTNAME=ipa.example.com \
          ci/runner-init.sh

      - name: Connect IPA container to network
        run: docker network connect example ipa --alias ipa.example.com --alias ipa-ca.example.com

      - name: Install IPA packages in IPA container
        run: |
          docker exec ipa dnf copr enable -y @freeipa/freeipa-master-nightly
          docker exec ipa dnf install -y freeipa-server freeipa-server-dns freeipa-server-trust-ad \
              python3-ipatests freeipa-healthcheck

      - name: Use 40-bit cert serial number
        run: |
          docker exec ipa bash -c "echo dbs.certs.id.length=5 >> /usr/share/pki/ca/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.requests.id.length=5 >> /usr/share/pki/ca/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.keys.id.length=5 >> /usr/share/pki/kra/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.requests.id.length=5 >> /usr/share/pki/kra/conf/CS.cfg"

      - name: Install IPA server in IPA container
        run: |
          docker exec ipa sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec ipa ipa-server-install \
              -U \
              --domain example.com \
              -r EXAMPLE.COM \
              -p Secret.123 \
              -a Secret.123 \
              --setup-kra \
              --no-host-dns \
              --no-ntp
          docker exec ipa bash -c "echo Secret.123 | kinit admin"
          docker exec ipa ipa ping

      - name: Verify CA admin in IPA container
        run: |
          docker exec ipa pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec ipa pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec ipa pki client-cert-import \
              --pkcs12 /root/ca-agent.p12 \
              --pkcs12-password Secret.123
          docker exec ipa pki -n ipa-ca-agent ca-user-show admin

      - name: Run IPA tests in IPA container
        run: docker exec ipa ${PKIDIR}/ci/ipa-test.sh

      - name: Gather artifacts from IPA container
        if: always()
        run: |
          ci/ds-artifacts-save.sh ipa EXAMPLE-COM
          ci/pki-artifacts-save.sh ipa
          ci/ipa-artifacts-save.sh ipa

      - name: Remove IPA server from IPA container
        run: docker exec ipa ipa-server-install --uninstall -U

      - name: Upload artifacts from IPA container
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ipa-40-bit-${{ matrix.os }}
          path: |
            /tmp/artifacts/ipa

  ipa-128-bit-test:
    name: Testing IPA with 128-bit ID generators
    needs: build
    runs-on: ubuntu-latest
    env:
      BUILDDIR: /tmp/workdir
      PKIDIR: /tmp/workdir/pki
      COPR_REPO: "@pki/master"
    strategy:
      matrix:
        os: ['33']
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Download runner image
        uses: actions/download-artifact@v2
        with:
          name: pki-runner-${{ matrix.os }}
          path: /tmp

      - name: Load runner image
        run: docker load --input /tmp/pki-runner.tar

      - name: Create network
        run: docker network create example

      - name: Run IPA container
        run: |
          IMAGE=pki-runner \
          NAME=ipa \
          HOSTNAME=ipa.example.com \
          ci/runner-init.sh

      - name: Connect IPA container to network
        run: docker network connect example ipa --alias ipa.example.com --alias ipa-ca.example.com

      - name: Install IPA packages in IPA container
        run: |
          docker exec ipa dnf copr enable -y @freeipa/freeipa-master-nightly
          docker exec ipa dnf install -y freeipa-server freeipa-server-dns freeipa-server-trust-ad \
              python3-ipatests freeipa-healthcheck

      - name: Use 128-bit cert serial number
        run: |
          docker exec ipa bash -c "echo dbs.certs.id.length=16 >> /usr/share/pki/ca/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.requests.id.length=16 >> /usr/share/pki/ca/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.keys.id.length=16 >> /usr/share/pki/kra/conf/CS.cfg"
          docker exec ipa bash -c "echo dbs.requests.id.length=16 >> /usr/share/pki/kra/conf/CS.cfg"

      - name: Install IPA server in IPA container
        run: |
          docker exec ipa sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec ipa ipa-server-install \
              -U \
              --domain example.com \
              -r EXAMPLE.COM \
              -p Secret.123 \
              -a Secret.123 \
              --setup-kra \
              --no-host-dns \
              --no-ntp
          docker exec ipa bash -c "echo Secret.123 | kinit admin"
          docker exec ipa ipa ping

      - name: Verify CA admin in IPA container
        run: |
          docker exec ipa pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec ipa pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec ipa pki client-cert-import \
              --pkcs12 /root/ca-agent.p12 \
              --pkcs12-password Secret.123
          docker exec ipa pki -n ipa-ca-agent ca-user-show admin

      - name: Run IPA tests in IPA container
        run: docker exec ipa ${PKIDIR}/ci/ipa-test.sh

      - name: Gather artifacts from IPA container
        if: always()
        run: |
          ci/ds-artifacts-save.sh ipa EXAMPLE-COM
          ci/pki-artifacts-save.sh ipa
          ci/ipa-artifacts-save.sh ipa

      - name: Remove IPA server from IPA container
        run: docker exec ipa ipa-server-install --uninstall -U

      - name: Upload artifacts from IPA container
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ipa-128-bit-${{ matrix.os }}
          path: |
            /tmp/artifacts/ipa
